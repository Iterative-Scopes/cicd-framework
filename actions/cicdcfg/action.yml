name: "Yaml configuration"
description: "read IS CI/CD yaml configuration"
inputs:
  env:
    description: "environment running cicd workflow"
    required: true
  role:
    description: "auth role for cicd workflow"
    required: false
    default: build
  profile:
    description: "configuration for cicd workflow"
    required: true

outputs:
  aws_account:
    description: "aws account in given env"
    value: ${{ steps.get-settings.outputs.aws_account }}
  aws_role: 
    description: "aws assume role in given env" 
    value: ${{ steps.get-settings.outputs.aws_role }}
  aws_role_duration: 
    description: "aws role valid in seconds" 
    value: ${{ steps.get-settings.outputs.aws_role_duration }}
  sqs_url: 
    description: "aws sqs url" 
    value: ${{ steps.get-settings.outputs.sqs_url }}
  aws_region: 
    description: "aws region in given env"
    value: ${{ steps.get-settings.outputs.aws_region }}
  aws_audience: 
    description: "aws OIDC audience"
    value: ${{ steps.get-settings.outputs.aws_audience }}
  app_name: 
    description: "app or service name"
    value: ${{ steps.get-settings.outputs.app_name }}
  app_registry: 
    description: "app or service name"
    value: ${{ steps.get-settings.outputs.app_registry }}
  app_repository: 
    description: "app or service name"
    value: ${{ steps.get-settings.outputs.app_repository }}

runs:
  using: 'composite'
  steps:
    - name: set Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'  

    - name: install yamcfg 
      shell: bash
      run: |
         pip install "${{ github.action_path }}/dist/cicdcfg-0.1.0.tar.gz"

    - name: get CI/CD environment settings
      id: get-settings
      shell: bash
      run: |
        cicdcfg --env ${{ inputs.env }} --role ${{ inputs.role }} --profile ${{ inputs.profile }}