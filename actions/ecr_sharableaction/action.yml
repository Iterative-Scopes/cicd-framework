# To use this workflow, you will need to complete the following set-up steps:
#
# Create an ECR repository to store your images.
#    For example: `aws ecr create-repository --repository-name my-ecr-repo --region us-east-2`.
#    Replace the value of the `ECR_REPOSITORY` environment variable in the workflow below with your repository's name.
#    Replace the value of the `AWS_REGION` environment variable in the workflow below with your repository's region.

name: Setup AWS OIDC IAM Role

on:
  workflow_call:
    inputs:
      AWS_REGION:
        required: true
        type: string
      ROLE_ARN:
        required: true
        type: string
      SECRET_ID:
        required: true
        type: string  

env:
  AWS_REGION: ${{inputs.AWS_REGION}}        

permissions:
  contents: read
  id-token: write

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps: 
    - name: Checkout
      uses: actions/checkout@v3
      
    - name: Configure AWS credentials
      id: aws-configure
      run: |
        export AWS_ROLE_ARN=${{inputs.ROLE_ARN}}
        export AWS_WEB_IDENTITY_TOKEN_FILE=/tmp/awscreds
        export AWS_DEFAULT_REGION=${{inputs.AWS_REGION}}
        echo AWS_WEB_IDENTITY_TOKEN_FILE=$AWS_WEB_IDENTITY_TOKEN_FILE >> $GITHUB_ENV
        echo AWS_ROLE_ARN=$AWS_ROLE_ARN >> $GITHUB_ENV
        echo AWS_DEFAULT_REGION=$AWS_DEFAULT_REGION >> $GITHUB_ENV

        curl -H "Authorization: bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" "$ACTIONS_ID_TOKEN_REQUEST_URL" | jq -r '.value' > $AWS_WEB_IDENTITY_TOKEN_FILE
    
    - name: Retrieve Secrets
      id: secrets
      uses: t-botz/aws-secrets-manager-read-action@v2
      with:
        secret-id: ${{inputs.SECRET_ID}}
        mask-values: true
        keys-as-env-vars: true
        keys-as-outputs: true
        append-to-env-file: ./my.env       
