name: deploy lambda
description: update lambda with container, S3 or zip 

inputs:
  env:
    description: environment hosting lambda 
    required: true
  profile:
    description: environment profile 
    required: true
  package_ref: 
    description: lambda package ref from lambda build job
    required: true
    default: "null"
  make-directory:
    description: directory of makefile
    required: false
    default: $GITHUB_WORKSPACE

runs:
    using: "composite"
    steps: 
      - name: Get given application settings
        id: app_settings
        uses: Iterative-Scopes/cicd-framework/actions/cicdcfg@main
        with:
          env: ${{ inputs.env }}
          role: deploy
          profile: ${{ inputs.profile }}

      - name: Validate package ref and setup lambda name
        shell: bash
        run: |
          echo LAMBDA_NAME=${{ inputs.env }}-${{ steps.app_settings.outputs.app_name }} >> $GITHUB_ENV
          if [ $LAMBDA_NAME == "null" || ${{ inputs.package_ref }} == "null" ]; 
          then
            echo "Missing package ref [${{ inputs.package_ref }}] or lambda name: [$LAMBDA_NAME]";
            exit 128;
          fi;

      - name: Configure AWS credentials
        id: aws-configure
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::${{ steps.app_settings.outputs.aws_account }}:role/${{ steps.app_settings.outputs.aws_role }}
          role-duration-seconds: ${{ steps.app_settings.outputs.aws_role_duration }}
          aws-region: ${{ steps.app_settings.outputs.aws_region }}
          audience: ${{ steps.app_settings.outputs.aws_audience }}
          
      - name: Deploy lambda
        if: ${{ steps.app_settings.outputs.app_registry == 'ecr' }}
        shell: bash
        run: |
          make -C ${{ inputs.make-directory }} deploy stage="dev" tag="${{ inputs.package_ref }}"