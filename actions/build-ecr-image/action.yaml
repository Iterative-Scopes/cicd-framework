name: build ecr image
description: build a container image and push to ecr, return image tag

inputs:
  aws_region:
    description: aws region
    required: true
  env_push:
    description: aws environment
    required: true
  repository:
    description: aws ecr repository
    required: true
  make_cmd: 
    description: make command
    default: container
    required: false

outputs:
  tag:
    description: image tag
    value: ${{ steps.ecr-image.outputs.tag }}

# assume caller has connect to AWS account
runs:
    using: "composite"
    steps:
      - name: Connect to AWS 
        uses: Iterative-Scopes/cicd-framework/actions/aws-login@ISOPS-548
        with:
            AWS_REGION: ${{ inputs.aws_region }}  
            role_arn: arn:aws:iam::${{ inputs.aws_account }}:role/${{ inputs.aws_role }}     
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        env: 
          AWS_REGION: ${{ inputs.aws_region }}

      - name: Build docker image
        id: build-image
        if: ${{ inputs.env_push }} == 'dev'
        env:
          REMOTE_REGISTRY: ${{ steps.login-ecr.outputs.registry }}/${{ inputs.repository }}
          IMAGE_TAG: ${{ github.ref_name }}
        shell: bash
        run: |
          echo "image tag [$IMAGE_TAG]"
          make ${{ inputs.make_cmd }} remotereg="$REMOTE_REGISTRY" tag="$IMAGE_TAG"
          make ${{ inputs.make_cmd }}test
    
      - name: Tag, and push image to Amazon ECR
        id: ecr-image
        env:
          REMOTE_REGISTRY: ${{ steps.login-ecr.outputs.registry }}/${{ inputs.repository }}
          IMAGE_TAG: ${{ github.ref_name }}
        shell: bash
        run: |
          docker image ls
          docker push $REMOTE_REGISTRY:$IMAGE_TAG-cpu
          echo "set output tag ["$IMAGE_TAG"]"
          echo "::set-output name=tag::"$IMAGE_TAG""
          docker push $REMOTE_REGISTRY:$IMAGE_TAG-gpu
          echo "set output tag ["$IMAGE_TAG"]"
          echo "::set-output name=tag::"$IMAGE_TAG""
         # make ${{ inputs.make_cmd }}_image_push remotereg="$REMOTE_REGISTRY" tag="$IMAGE_TAG"